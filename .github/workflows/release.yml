name: Build and Release Docker Image

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to release (e.g., v1.0.0)'
        required: true
        type: string

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=tag
            type=raw,value=latest,enable={{is_default_branch}}
            type=raw,value=${{ github.event.inputs.tag }},enable=${{ github.event_name == 'workflow_dispatch' }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Generate release notes
        id: release_notes
        run: |
          if [ "${{ github.event_name }}" = "push" ]; then
            TAG_NAME=${GITHUB_REF#refs/tags/}
          else
            TAG_NAME=${{ github.event.inputs.tag }}
          fi

          echo "tag_name=${TAG_NAME}" >> $GITHUB_OUTPUT

          # Get commits since last tag
          LAST_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
          if [ -n "$LAST_TAG" ]; then
            COMMITS=$(git log --oneline ${LAST_TAG}..HEAD)
          else
            COMMITS=$(git log --oneline -10)
          fi

          cat > release_notes.md << EOF
          ## Docker Image

          \`\`\`bash
          docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${TAG_NAME}
          \`\`\`

          ## Recent Changes
          ${COMMITS}

          ## Usage

          ### Quick Start
          \`\`\`bash
          # Pull the image
          docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${TAG_NAME}

          # Run with PostgreSQL (requires external DB)
          docker run -p 3000:3000 \\
            -e DATABASE_URL=postgresql://user:pass@host:5432/db \\
            -e RAILS_MASTER_KEY=your_master_key \\
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${TAG_NAME}
          \`\`\`

          ### Environment Variables
          - \`DATABASE_URL\`: PostgreSQL connection string
          - \`RAILS_MASTER_KEY\`: Rails master key for encrypted credentials
          - \`RAILS_ENV\`: Set to "production" (default)

          Available for platforms: linux/amd64, linux/arm64
          EOF

      - name: Create GitHub Release
        if: github.event_name == 'push'
        uses: softprops/action-gh-release@v1
        with:
          body_path: release_notes.md
          generate_release_notes: true